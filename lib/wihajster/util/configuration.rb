require 'yaml'

class Wihajster::Configuration
  attr_writer :config_name, :config_path

  class ConfigHash < BasicObject
    attr_accessor :__config

    def self.convert(source, config)
      converted = 
        case source
        when ConfigHash
          source
        when ::Hash
          hash = {}
          source.each{|k,v| hash[k] = convert(v, config)}
          ConfigHash.new(hash)
        when ::Array
          source.map {|e| convert(e, config) }
        else
          source
        end

      converted.__config = config if ConfigHash === converted

      converted
    end

    def initialize(hash={})
      @hash = hash
    end

    def [](key)
      @hash[key]
    end

    def []=(key, value)
      prev = @hash[key]
      curr = @hash[key] = self.class.convert(value)

      __config.save if prev != curr

      curr
    end

    def __hash
      @hash
    end

    def ==(other)
      other.is_a?(ConfigHash) && other.__hash == __hash
    end

    def method_missing(name, *args, &block)
      return(super) if block

      sname, symname = name.to_s, name.to_sym
      case args.length
      when 0
        self[symname]
      when 1
       if sname[-1..-1] == "="
         self[sname[0..-2].to_sym] = args.first
       else
         super
       end
      else
        super
      end
    end
  end

  def initialize(profile)
    self.profile = profile
  end

  def config_name
    @config_name || @profile.empty? ? "wihajster.yml" : (@profile + ".yml")
  end

  def defaults
    default = {
      default: {
        joystick: { id: nil },
        printer:  { device: nil, speed: 115200, },
        scripts:  { monitor: true, },
      },
      "events_test" => {
        joystick: { id: 0 },
        printer:  { device: nil, speed: 115200, },
        scripts:  { monitor: false, },
      },
    }

    default[@profile] || default[:default]
  end

  def config_path
    @config_path || File.join(Wihajster.working_dir, config_name)
  end

  def data
    @data
  end

  def to_yaml
    YAML.dump(@data)
  end

  def convert(hash)
    ConfigHash.convert(hash, self)
  end

  def load
    if File.exist?(config_path)
      @raw_config = YAML.load_file(config_path)
      @data = convert( @raw_config )
    else
      @data = convert( defaults )
    end

    self
  end

  def save
    File.open(config_path, "w") do |f|
      f.puts "# YAML config generated by wihajster on #{Time.now.strftime("%Y-%m-%d %H:%M")}."
      f.puts "# Changes made by external tools during runtime of wihajster"
      f.puts "# will be ignored, and might be overriden."
      f.write(to_yaml)
    end

    self
  end

  def profile=(profile)
    @profile = profile
    load
  end
end
