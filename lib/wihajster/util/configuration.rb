require 'yaml'

class Wihajster::Configuration
  attr_writer :config_name, :config_path

  class OpenStructHash < Hash
    def method_missing(name, *args, &block)
      return(super) if block

      sname, symname = name.to_s, name.to_sym
      case args.length
      when 0
        self[symname]
      when 1
       if sname[-1..-1] == "="
         self[sname[0..-2].to_sym] = args.first
       else
         super
       end
      else
        super
      end
    end
  end

  def default
    {
      joystick: {id: nil},
      printer: {
        device: nil,
        speed: 115200,
      },
      scripts: {
        monitor: true,
      },
    }
  end

  def initialize(profile)
    @auto_save = true
    self.profile = profile
  end

  def config_name
    @config_name || @profile.empty? ? "wihajster.yml" : (@profile + ".yml")
  end

  def config_path
    @config_path || File.join(Wihajster.working_dir, config_name)
  end

  def data
    @data
  end

  def to_yaml
    YAML.dump(@data)
  end

  def convert(object)
    case object
    when OpenStructHash
      object
    when Hash
      hash = {}
      object.each{|k,v| hash[k] = convert(v)}
      OpenStructHash[hash]
    when Array
      object.map {|e| convert(e) }
    else
      object
    end
  end

  def load
    if File.exist?(config_path)
      @raw_config = YAML.load_file(config_path)
      @data = convert( @raw_config )
    else
      @data = convert( default )
    end

    self
  end

  def save
    File.open(config_path, "w") do |f|
      f.puts "# YAML config generated by wihajster on #{Time.now.strftime("%Y-%m-%d %H:%M")}."
      f.puts "# Changes made by external tools during runtime of wihajster"
      f.puts "# will be ignored, and might be overriden."
      f.write(to_yaml)
    end

    self
  end

  def temporary!
    @auto_save = false
  end

  def profile=(profile)
    @profile = profile
    load
  end
end
