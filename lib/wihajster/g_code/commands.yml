---
- :code: G0
  :name: Rapid move
  :example: G0 X12
  :method_name: rapid_move
  :description: ! '

    In this case move rapidly to X = 12 mm.  In fact, the RepRap firmware uses exactly
    the same code for rapid as it uses for controlled moves (see G1 below), as - for
    the RepRap machine - this is just as efficient as not doing so.  (The distinction
    comes from some old machine tools that used to move faster if the axes were not
    driven in a straight line.  For them G0 allowed any movement in space to get to
    the destination as fast as possible.)'
  :accepts:
  - :E
  - :F
  - :X
  - :Y
  - :Z
  :supported: true
- :code: G1
  :name: Controlled move
  :example: G1 X90.6 Y13.8 E22.4
  :method_name: move
  :description: ! "\nGo in a straight line from the current (X, Y) point to the point
    (90.6, 13.8), extruding material as the move happens from the current extruded
    length to a length of 22.4 mm.\nRepRap does subtle things with feedrates.  Thus:\n<pre>\nG1
    F1500\nG1 X90.6 Y13.8 E22.4\n</pre>  \nWill set a feedrate of 1500 mm/minute,
    then do the move described above at that feedrate.  But\n<pre>\nG1 F1500\nG1 X90.6
    Y13.8 E22.4 F3000\n</pre>\nWill set a feedrate of 1500 mm/minute, then do the
    move described above accelerating to a feedrate of 3000 mm/minute as it does so.
    \ The extrusion will accelerate along with the X, Y movement so everything stays
    synchronized.\nRepRap thus treats feedrate as simply another variable (like X,
    Y, Z, and E) to be linearly interpolated. This gives complete control over accelerations
    and decelerations in a way that ensures that everything moves together and the
    right volume of material is extruded at all points.\n''Note: not every firmware
    implements this, e.g. the current [[Marlin]] will use the new feedrate from the
    beginning of the move and not change it.''\nThe first example shows how to get
    a constant-speed movement.  The second how to accelerate or decelerate.  Thus\n<pre>\nG1
    F1500\nG1 X90.6 Y13.8 E22.4 F3000\nG1 X80 Y20 E36 F1500\n</pre>\nWill do the first
    movement accelerating as before, and the second decelerating from 3000 mm/minute
    back to 1500 mm/minute.\nTo reverse the extruder by a given amount (for example
    to reduce its internal pressure while it does an in-air movement so that it doesn't
    dribble) simply use G1 to send an E value that is less than the currently extruded
    length."
  :accepts:
  - :E
  - :F
  - :X
  - :Y
  - :Z
  :supported: true
- :code: G28
  :name: Move to Origin
  :example: G28
  :method_name: move_to_origin
  :description: ! "\nThis causes the RepRap machine to move back to its X, Y and Z
    zero endstops, a process known as \"homing\".  It does so accelerating, so as
    to get there fast.  But when it arrives it backs off by 1 mm in each direction
    slowly, then moves back slowly to the stop.  This ensures more accurate positioning.
    \ \nIf you add coordinates, then just the axes with coordinates specified will
    be zeroed.  Thus \nG28 X0 Y72.3\nwill zero the X and Y axes, but not Z.  The actual
    coordinate values are ignored."
  :accepts:
  - :X
  - :Y
  - :Z
  :supported: true
- :code: G29
  :name: Detailed Z-Probe
  :example: 
  :method_name: detailed_z_probe
  :description: probes the bed at 3 points.
  :accepts: []
  :supported: true
- :code: G30
  :name: Single Z Probe
  :example: 
  :method_name: single_z_probe
  :description: probes bed at current XY location.
  :accepts: []
  :supported: true
- :code: G31
  :name: Report Current Probe status
  :example: 
  :method_name: report_current_probe_status
  :description: reports whether Z probe is triggered.
  :accepts:
  - :Z
  :supported: true
- :code: G32
  :name: Probe Z and calibrate with FPU
  :example: 
  :method_name: probe_z_and_calibrate_with_fpu
  :description: probes the bed at 3 points and updates transformation matrix for bed
    leveling compensation.
  :accepts: []
  :supported: true
- :code: G4
  :name: Dwell
  :example: G4 P200
  :method_name: dwell
  :description: ! '

    In this case sit still doing nothing for 200 milliseconds.  During delays the
    state of the machine (for example the temperatures of its extruders) will still
    be preserved and controlled.'
  :accepts:
  - :P
  :supported: true
- :code: G10
  :name: Head Offset
  :example: G10 P3 X17.8 Y-19.3 Z0.0 R140 S205
  :method_name: head_offset
  :description: ! "\nThis sets the offset for extrude head 3 (from the P3) to the
    X and Y values specified.  You can put a non-zero Z value in as well, but this
    is usually a bad idea unless the heads are loaded and unloaded by some sort of
    head changer.  When all the heads are in the machine at once they should all be
    set to the same Z height.\nRemember that any parameter that you don't specify
    will automatically be set to the last value for that parameter.  That usually
    means that you want explicitly to set Z0.0.  \nThe R value is the standby temperature
    in <sup>o</sup>C that will be used for the tool, and the S value is its operating
    temperature.  If you don't want the head to be at a different temperature when
    not in use, set both values the same.  See the T code (select tool) below.\nThe
    [http://www.nist.gov/customcf/get_pdf.cfm?pub_id=823374 NIST G-code standard]
    mentions an additional L parameter, which is ignored.\nThis command is [[Talk:G-code#M104
    .26 M109 Deprecation, G10 Introduction | subject to discussion]]."
  :accepts:
  - :P
  - :R
  - :S
  - :X
  - :Y
  - :Z
  :supported: true
- :code: G20
  :name: Set Units to Inches
  :example: G20
  :method_name: set_units_to_inches
  :description: ! '

    Units from now on are in inches.'
  :accepts: []
  :supported: true
- :code: G21
  :name: Set Units to Millimeters
  :example: G21
  :method_name: set_units_to_millimeters
  :description: ! '

    Units from now on are in millimeters.  (This is the RepRap default.)'
  :accepts: []
  :supported: true
- :code: G90
  :name: Set to Absolute Positioning
  :example: G90
  :method_name: set_to_absolute_positioning
  :description: ! '

    All coordinates from now on are absolute relative to the origin of the machine.  (This
    is the RepRap default.)'
  :accepts: []
  :supported: true
- :code: G91
  :name: Set to Relative Positioning
  :example: G91
  :method_name: set_to_relative_positioning
  :description: ! '

    All coordinates from now on are relative to the last position.'
  :accepts: []
  :supported: true
- :code: G92
  :name: Set Position
  :example: G92 X10 E90
  :method_name: set_position
  :description: ! '

    Allows programming of absolute zero point, by reseting the current position to
    the values specified.  This would set the machine''s X coordinate to 10, and the
    extrude coordinate to 90. No physical motion will occur.

    A G92 without coordinates will reset all axes to zero.'
  :accepts:
  - :E
  - :X
  :supported: true
- :code: M0
  :name: Stop
  :example: M0
  :method_name: stop
  :description: ! '

    The RepRap machine finishes any moves left in its buffer, then shuts down.  All
    motors and heaters are turned off.  It can be started again by pressing the reset
    button on the master microcontroller.  See also M1, M112.'
  :accepts: []
  :supported: true
- :code: M1
  :name: Sleep
  :example: M1
  :method_name: sleep
  :description: ! '

    The RepRap machine finishes any moves left in its buffer, then shuts down.  All
    motors and heaters are turned off.  It can still be sent G and M codes, the first
    of which will wake it up again.  See also M0, M112.'
  :accepts: []
  :supported: true
- :code: M3
  :name: Spindle On, Clockwise  (CNC specific)
  :example: M3 S4000
  :method_name: spindle_on_clockwise
  :description: ! '

    The spindle is turned on with a speed of 4000 RPM.'
  :accepts:
  - :S
  :supported: true
- :code: M4
  :name: Spindle On, Counter-Clockwise (CNC specific)
  :example: M4 S4000
  :method_name: spindle_on_counter_clockwise
  :description: ! '

    The spindle is turned on with a speed of 4000 RPM.'
  :accepts:
  - :S
  :supported: true
- :code: M5
  :name: Spindle Off (CNC specific)
  :example: M5
  :method_name: spindle_off
  :description: ! '

    The spindle is turned off.'
  :accepts: []
  :supported: true
- :code: M7
  :name: Mist Coolant On (CNC specific)
  :example: M7
  :method_name: mist_coolant_on
  :description: ! '

    Mist coolant is turned on (if available)'
  :accepts: []
  :supported: true
- :code: M8
  :name: Flood Coolant On (CNC specific)
  :example: M8
  :method_name: flood_coolant_on
  :description: ! '

    Flood coolant is turned on (if available)'
  :accepts: []
  :supported: true
- :code: M9
  :name: Coolant Off (CNC specific)
  :example: M9
  :method_name: coolant_off
  :description: ! '

    All coolant systems are turned off.'
  :accepts: []
  :supported: true
- :code: M10
  :name: Vacuum On (CNC specific)
  :example: M10
  :method_name: vacuum_on
  :description: ! '

    Dust collection vacuum system turned on.'
  :accepts: []
  :supported: true
- :code: M11
  :name: Vacuum Off (CNC specific)
  :example: M11
  :method_name: vacuum_off
  :description: ! '

    Dust collection vacuum system turned off.'
  :accepts: []
  :supported: true
- :code: M17
  :name: Enable/Power all stepper motors
  :example: M17
  :method_name: enable_power_all_stepper_motors
  :description: ''
  :accepts: []
  :supported: true
- :code: M18
  :name: Disable all stepper motors
  :example: M18
  :method_name: disable_all_stepper_motors
  :description: ! '

    Disables stepper motors and allows axis to move ''freely.''

    - Is this not the same as [[#M84:_Stop_idle_hold|M84]]? --  [[User:MrAlvin|MrAlvin]]
    05:53, 20 September 2012 (UTC)'
  :accepts: []
  :supported: true
- :code: M20
  :name: List SD card
  :example: M20
  :method_name: list_sd_card
  :description: ! '

    All files in the root folder of the SD card are listed to the serial port.  This
    results in a line like:

    ok Files: {SQUARE.G,SQCOM.G,}

    The trailing comma is optional.  Note that file names are returned in upper case,
    but - when sent to the M23 command (below) they must be in lower case.  This seems
    to be a function of the SD software.  Go figure...'
  :accepts: []
  :supported: true
- :code: M21
  :name: Initialize SD card
  :example: M21
  :method_name: initialize_sd_card
  :description: ! '

    The SD card is initialized. If an SD card is loaded when the machine is switched
    on, this will happen by default. SD card must be initialized for the other SD
    functions to work.'
  :accepts: []
  :supported: true
- :code: M22
  :name: Release SD card
  :example: M22
  :method_name: release_sd_card
  :description: ! '

    SD card is released and can be physically removed.'
  :accepts: []
  :supported: true
- :code: M23
  :name: Select SD file
  :example: M23 filename.gco
  :method_name: select_sd_file
  :description: ! '

    The file specified as filename.gco (8.3 naming convention is supported) is selected
    ready for printing.'
  :accepts: []
  :supported: true
- :code: M24
  :name: Start/resume SD print
  :example: M24
  :method_name: start_resume_sd_print
  :description: ! '

    The machine prints from the file selected with the M23 command.'
  :accepts: []
  :supported: true
- :code: M25
  :name: Pause SD print
  :example: M25
  :method_name: pause_sd_print
  :description: ! '

    The machine pause printing at the current position within the file selected with
    the M23 command.'
  :accepts: []
  :supported: true
- :code: M26
  :name: Set SD position
  :example: M26
  :method_name: set_sd_position
  :description: ! '

    Set SD position in bytes (M26 S12345).'
  :accepts:
  - :S
  :supported: true
- :code: M27
  :name: Report SD print status
  :example: M27
  :method_name: report_sd_print_status
  :description: ! '

    Report SD print status.'
  :accepts: []
  :supported: true
- :code: M28
  :name: Begin write to SD card
  :example: M28 filename.gco
  :method_name: begin_write_to_sd_card
  :description: ! '

    File specified by filename.gco is created (or overwritten if it exists) on the
    SD card and all subsequent commands sent to the machine are written to that file.'
  :accepts: []
  :supported: true
- :code: M29
  :name: Stop writing to SD card
  :example: M29 filename.gco
  :method_name: stop_writing_to_sd_card
  :description: ! '

    File opened by M28 command is closed, and all subsequent commands sent to the
    machine are executed as normal.'
  :accepts: []
  :supported: true
- :code: M40
  :name: Eject
  :example: 
  :method_name: eject
  :description: ! 'If your RepRap machine can eject the parts it has built off the
    bed, this command executes the eject cycle.  This usually involves cooling the
    bed and then performing a sequence of movements that remove the printed parts
    from it.  The X, Y and Z position of the machine at the end of this cycle are
    undefined (though they can be found out using the M114 command, q.v.).

    See also M240 and M241 below.'
  :accepts:
  - :X
  - :Y
  - :Z
  :supported: true
- :code: M41
  :name: Loop
  :example: M41
  :method_name: loop
  :description: ! '

    If the RepRap machine was building a file from its own memory such as a local
    SD card (as opposed to a file being transmitted to it from a host computer) this
    goes back to the beginning of the file and runs it again.  So, for example, if
    your RepRap is capable of ejecting parts from its build bed then you can set it
    printing in a loop and it will run and run.  Use with caution - the only things
    that will stop it are:

    # When you press the reset button,

    # When the build material runs out (if your RepRap is set up to detect this),
    and

    # When there''s an error (such as a heater failure).'
  :accepts: []
  :supported: true
- :code: M42
  :name: Stop on material exhausted / Switch I/O pin
  :example: 
  :method_name: stop_on_material_exhausted_switch_i_o_pin
  :description: ''
  :accepts: []
  :supported: true
- :code: M43
  :name: Stand by on material exhausted
  :example: M43
  :method_name: stand_by_on_material_exhausted
  :description: ! '

    If your RepRap can detect when its material runs out, this decides the behaviour
    when that happens.  The X and Y axes are zeroed (but not Z), and then the machine
    shuts all motors and heaters off except the heated bed, the temperature of which
    is maintained.  The machine will still respond to G and M code commands in this
    state.'
  :accepts:
  - :X
  - :Y
  - :Z
  :supported: true
- :code: M80
  :name: ATX Power On
  :example: M80
  :method_name: atx_power_on
  :description: ! '

    Turns on the ATX power supply from standby mode to fully operational mode. No-op
    on electronics without standby mode.

    ''''''Note'''''': some firmwares, like [[Teacup Firmware | Teacup]], handle power
    on/off automatically, so this is redundant there.'
  :accepts: []
  :supported: true
- :code: M81
  :name: ATX Power Off
  :example: M81
  :method_name: atx_power_off
  :description: ! '

    Turns off the ATX power supply. Counterpart to M80.'
  :accepts: []
  :supported: true
- :code: M82
  :name: set extruder to absolute mode
  :example: M82
  :method_name: set_extruder_to_absolute_mode
  :description: ! '

    makes the extruder interpret extrusion as absolute positions.

    This is the default in repetier.'
  :accepts: []
  :supported: true
- :code: M83
  :name: set extruder to relative mode
  :example: M83
  :method_name: set_extruder_to_relative_mode
  :description: ! '

    makes the extruder interpret extrusion values as relative positions.'
  :accepts: []
  :supported: true
- :code: M84
  :name: Stop idle hold
  :example: M84
  :method_name: stop_idle_hold
  :description: ! '

    Stop the idle hold on all axis and extruder. In some cases the idle hold causes
    annoying noises, which can be stopped by disabling the hold. Be aware that by
    disabling idle hold during printing, you will get quality issues. This is recommended
    only in between or after printjobs.'
  :accepts: []
  :supported: true
- :code: M92
  :name: Set axis_steps_per_unit
  :example: ! 'M92 X<newsteps> '
  :method_name: set_axis_steps_per_unit
  :description: ! '#  Sprinter and Marlin

    Allows programming of steps per unit of axis till the electronics are reset for
    the specified axis. Very useful for calibration.'
  :accepts:
  - :X
  :supported: true
- :code: M98
  :name: Get axis_hysteresis_mm
  :example: ! 'M98                       '
  :method_name: get_axis_hysteresis_mm
  :description: ! '

    Report the current hysteresis values in mm for all of the axis.

    Proposed for Marlin'
  :accepts: []
  :supported: true
- :code: M99
  :name: Set axis_hysteresis_mm
  :example: ! 'M99 X<mm> Y<mm> Z<mm> E<mm>   '
  :method_name: set_axis_hysteresis_mm
  :description: ! '

    Allows programming of axis hysteresis. Mechanical pulleys, gears and threads can
    have hysteresis when they change direction. That is, a certain number of steps
    occur before movement occurs. You can measure how many mm are lost to hysteresis
    and set their values with this command. Every time an axis changes direction,
    these extra mm will be added to compensate for the hysteresis.

    Proposed for Marlin'
  :accepts:
  - :E
  - :X
  - :Y
  - :Z
  :supported: true
- :code: M104
  :name: Set Extruder Temperature
  :example: M104 S190
  :method_name: set_extruder_temperature
  :description: ! '

    Set the temperature of the current extruder to 190<sup>o</sup>C and return control
    to the host immediately (''''i.e.'''' before that temperature has been reached
    by the extruder). See also M109.

    This is deprecated because temperatures should be set using the G10 and T commands
    (q.v.).

    Deprecation is [[Talk:G-code#M104 .26 M109 Deprecation, G10 Introduction | subject
    to discussion]]. --[[User:Traumflug|Traumflug]] 11:33, 19 July 2012 (UTC)'
  :accepts:
  - :S
  :supported: true
- :code: M105
  :name: Get Extruder Temperature
  :example: M105
  :method_name: get_extruder_temperature
  :description: ! '

    Request the temperature of the current extruder and the build base in degrees
    Celsius.  The temperatures are returned to the host computer.  For example, the
    line sent to the host in response to this command looks like

    <tt>ok T:201 B:117</tt>'
  :accepts: []
  :supported: true
- :code: M106
  :name: Fan On
  :example: M106 S127
  :method_name: fan_on
  :description: ! '

    Turn on the cooling fan at half speed.

    Mandatory parameter ''S'' declares the PWM value (0-255). M106 S0 turns the fan
    off.'
  :accepts:
  - :S
  :supported: true
- :code: M107
  :name: Fan Off
  :example: 
  :method_name: fan_off
  :description: Deprecated. Use M106 S0 instead.
  :accepts:
  - :S
  :supported: true
- :code: M108
  :name: Set Extruder Speed
  :example: 
  :method_name: set_extruder_speed
  :description: ! 'Sets speed of extruder motor.

    (Deprecated in current firmware, see M113)'
  :accepts: []
  :supported: true
- :code: M109
  :name: Set Extruder Temperature and Wait
  :example: 
  :method_name: set_extruder_temperature_and_wait
  :description: ''
  :accepts: []
  :supported: true
- :code: M110
  :name: Set Current Line Number
  :example: M110 N123
  :method_name: set_current_line_number
  :description: ! '

    Set the current line number to 123.  Thus the expected next line after this command
    will be 124.

    <br style="clear: both" />'
  :accepts: []
  :supported: true
- :code: M111
  :name: Set Debug Level
  :example: M111 S6
  :method_name: set_debug_level
  :description: ! '

    Set the level of debugging information transmitted back to the host to level 6.  The
    level is the OR of three bits:

    <Pre>

    #define DEBUG_ECHO (1<<0)

    #define DEBUG_INFO (1<<1)

    #define DEBUG_ERRORS (1<<2)

    </pre>

    Thus 6 means send information and errors, but don''t echo commands.  (This is
    the RepRap default.)

    Example: M253'
  :accepts:
  - :S
  :supported: true
- :code: M112
  :name: Emergency Stop
  :example: M112
  :method_name: emergency_stop
  :description: ! '

    Any moves in progress are immediately terminated, then RepRap shuts down.  All
    motors and heaters are turned off.  It can be started again by pressing the reset
    button on the master microcontroller.  See also M0 and M1.'
  :accepts: []
  :supported: true
- :code: M113
  :name: Set Extruder PWM
  :example: M113
  :method_name: set_extruder_pwm
  :description: ! "\nSet the PWM for the currently-selected extruder.  On its own
    this command \nsets RepRap to use the on-board potentiometer on the extruder controller
    board to set the PWM for the currently-selected extruder's stepper power.  With
    an S field:\nM113 S0.7\nit causes the PWM to be set to the S value (70% in this
    instance).  M113 S0 turns the extruder off, until an M113 command other than M113
    S0 is sent."
  :accepts:
  - :S
  :supported: true
- :code: M114
  :name: Get Current Position
  :example: M114
  :method_name: get_current_position
  :description: ! '

    This causes the RepRap machine to report its current X, Y, Z and E coordinates
    to the host.

    For example, the machine returns a string such as:

    <tt>ok C: X:0.00 Y:0.00 Z:0.00 E:0.00</tt>'
  :accepts:
  - :E
  - :X
  - :Y
  - :Z
  :supported: true
- :code: M115
  :name: Get Firmware Version and Capabilities
  :example: M115
  :method_name: get_firmware_version_and_capabilities
  :description: ! "\nRequest the Firmware Version and Capabilities of the current
    microcontroller \nThe details are returned to the host computer as key:value pairs
    separated by spaces and terminated with a linefeed.\nsample data from firmware:\nok
    PROTOCOL_VERSION:0.1 FIRMWARE_NAME:FiveD FIRMWARE_URL:http%3A//reprap.org MACHINE_TYPE:Mendel
    EXTRUDER_COUNT:1\nThis M115 code is inconsistently implemented, and should not
    be relied upon to exist, or output correctly in all cases. An initial implementation
    was committed to svn for the FiveD Reprap firmware on 11 Oct 2010.  Work to more
    formally define protocol versions is currently (October 2010) being discussed.
    \ See [[M115_Keywords]] for one draft set of keywords and their meanings."
  :accepts: []
  :supported: true
- :code: M116
  :name: Wait
  :example: M116
  :method_name: wait
  :description: ! '

    Wait for ''''all'''' temperatures and other slowly-changing variables to arrive
    at their set values.  See also M109.'
  :accepts: []
  :supported: true
- :code: M117
  :name: Get Zero Position
  :example: M117
  :method_name: get_zero_position
  :description: ! '

    This causes the RepRap machine to report the X, Y, Z and E coordinates ''''in
    steps not mm'''' to the host that it found when it last hit the zero stops for
    those axes.  That is to say, when you zero X, the <i>x</i> coordinate of the machine
    when it hits the X endstop is recorded.  This value should be 0, of course.  But
    if the machine has drifted (for example by dropping steps) then it won''t be.  This
    command allows you to measure and to diagnose such problems.  (E is included for
    completeness.  It doesn''t normally have an endstop.)'
  :accepts:
  - :E
  - :X
  - :Y
  - :Z
  :supported: true
- :code: M118
  :name: Negotiate Features
  :example: M118 P42
  :method_name: negotiate_features
  :description: ! '

    This M-code is for future proofing. NO firmware or hostware supports this at the
    moment. It is used in conjunction with M115''s FEATURES keyword.

    See [[Protocol_Feature_Negotiation]] for more info.'
  :accepts:
  - :P
  :supported: true
- :code: M119
  :name: Get Endstop Status
  :example: M119
  :method_name: get_endstop_status
  :description: ! '

    Returns the current state of the configured X,Y,Z endstops. Should take into account
    any ''inverted endstop'' settings, so one can confirm that the machine is interpreting
    the endstops correctly.'
  :accepts:
  - :X
  :supported: true
- :code: M126
  :name: Open Valve
  :example: M126 P500
  :method_name: open_valve
  :description: ! '

    Open the extruder''s valve (if it has one) and wait 500 milliseconds for it to
    do so.'
  :accepts:
  - :P
  :supported: true
- :code: M127
  :name: Close Valve
  :example: M127 P400
  :method_name: close_valve
  :description: ! '

    Close the extruder''s valve (if it has one) and wait 400 milliseconds for it to
    do so.'
  :accepts:
  - :P
  :supported: true
- :code: M128
  :name: Extruder Pressure PWM
  :example: M128 S255
  :method_name: extruder_pressure_pwm
  :description: ! '

    PWM value to control internal extruder pressure. S255 is full pressure.'
  :accepts:
  - :S
  :supported: true
- :code: M129
  :name: Extruder pressure off
  :example: M129 P100
  :method_name: extruder_pressure_off
  :description: ! '

    In addition to setting Extruder pressure to 0, you can turn the pressure off entirely.
    P400 will wait 100ms to do so.'
  :accepts:
  - :P
  :supported: true
- :code: M130
  :name: Set PID P value
  :example: ! 'M130 P 0 S 8.0  '
  :method_name: set_pid_p_value
  :description: ! '#  Sets heater 0 P factor to 8.0

    <br style="clear: both" />'
  :accepts:
  - :P
  - :S
  :supported: true
- :code: M131
  :name: Set PID I value
  :example: ! 'M130 P 1 S 0.5  '
  :method_name: set_pid_i_value
  :description: ! '#  Sets heater 1 I factor to 0.5

    <br style="clear: both" />'
  :accepts:
  - :P
  - :S
  :supported: true
- :code: M132
  :name: Set PID D value
  :example: ! 'M130 P 0 S 24  '
  :method_name: set_pid_d_value
  :description: ! '#  Sets heater 0 D factor to 24.0

    <br style="clear: both" />'
  :accepts:
  - :P
  - :S
  :supported: true
- :code: M133
  :name: Set PID I limit value
  :example: ! 'M130 P 1 S 264  '
  :method_name: set_pid_i_limit_value
  :description: ! '#  Sets heater 0 I limit value to 264

    <br style="clear: both" />'
  :accepts:
  - :P
  - :S
  :supported: true
- :code: M134
  :name: Write PID values to EEPROM
  :example: ! 'M134 '
  :method_name: write_pid_values_to_eeprom
  :description: ! '

    <br style="clear: both" />'
  :accepts: []
  :supported: true
- :code: M136
  :name: Print PID settings to host
  :example: ! 'M136 P1  '
  :method_name: print_pid_settings_to_host
  :description: ! '# print heater 0 PID parameters to host

    <br style="clear: both" />'
  :accepts:
  - :P
  :supported: true
- :code: M140
  :name: Bed Temperature (Fast)
  :example: M140 S55
  :method_name: bed_temperature
  :description: ! '

    Set the temperature of the build bed to 55<sup>o</sup>C and return control to
    the host immediately (''''i.e.'''' before that temperature has been reached by
    the bed).'
  :accepts:
  - :S
  :supported: true
- :code: M141
  :name: Chamber Temperature (Fast)
  :example: M141 S30
  :method_name: chamber_temperature
  :description: ! '

    Set the temperature of the chamber to 30<sup>o</sup>C and return control to the
    host immediately (''''i.e.'''' before that temperature has been reached by the
    chamber).'
  :accepts:
  - :S
  :supported: true
- :code: M142
  :name: Holding Pressure
  :example: M142 S1
  :method_name: holding_pressure
  :description: ! '

    Set the holding pressure of the bed to 1 bar.

    The holding pressure is in bar.  For hardware which only has on/off holding, when
    the holding pressure is zero, turn off holding, when the holding pressure is greater
    than zero, turn on holding.'
  :accepts:
  - :S
  :supported: true
- :code: M143
  :name: Maximum hot-end temperature
  :example: M143 S275
  :method_name: maximum_hot_end_temperature
  :description: ! '

    Set the maximum temperature of the hot-end to 275C

    When temperature of the hot-end exceeds this value, take countermeasures, for
    instance an emergency stop. This is to prevent hot-end damage.'
  :accepts:
  - :S
  :supported: true
- :code: M160
  :name: Number of mixed materials
  :example: M160 S4
  :method_name: number_of_mixed_materials
  :description: ! "\nSet the number of materials, N, that the current extruder can
    handle to the number specified.  The default is 1.\nWhen N >= 2, then the E field
    that controls extrusion requires N+1 values separated by spaces after it like
    this: \n<pre>\nM160 S4\nG1 X90.6 Y13.8 E22.4 0.1 0.1 0.1 0.7\nG1 X70.6 E42.4 0.0
    0.0 0.0 1.0\nG1 E42.4 1.0 0.0 0.0 0.0\n</pre>\nThe second line moves straight
    to the point (90.6, 13.8) extruding 22.4mm of filament.  The mix ratio at the
    '''end''' of the move is 0.1:0.1:0.1:0.7.\nThe third line moves back 20mm in X
    extruding 20mm of filament.  The mix varies linearly from 0.1:0.1:0.1:0.7 to 0:0:0:1
    as the move is made.\nThe fourth line has no physical effect, but sets the mix
    proportions for the start of the next move to 1:0:0:0."
  :accepts:
  - :E
  - :S
  - :X
  - :Y
  :supported: true
- :code: M190
  :name: Wait for bed temperature to reach target temp
  :example: M190 S60
  :method_name: wait_for_bed_temperature_to_reach_target_temp
  :description: ! '

    This will wait until the bed temperature reaches 60 degrees, printing out the
    temperature of the hot end and the bed every second.

    <br style="clear: both" />'
  :accepts:
  - :S
  :supported: true
- :code: M206
  :name: set home offset
  :example: M206 X10.0 Y10.0 Z-0.4
  :method_name: set_home_offset
  :description: ! '

    The values specified are added to the endstop position when the axes are referenced.
    The same can be achieved with a G92 right after homing (G28, G161).

    With Marlin firmware, this value can be saved to EEPROM using the M500 command.

    A similar command is G10, aligning these two is [[Talk:G-code#M104 .26 M109 Deprecation,
    G10 Introduction | subject to discussion]].'
  :accepts:
  - :X
  - :Y
  - :Z
  :supported: true
- :code: M207
  :name: calibrate z axis by detecting z max length
  :example: M207
  :method_name: calibrate_z_axis_by_detecting_z_max_length
  :description: ! '

    After placing the tip of the nozzle in the position you expect to be considered
    Z=0, issue this command to calibrate the Z axis. It will perform a z axis homing
    routine and calculate the distance traveled in this process. The result is stored
    in EEPROM as z_max_length. For using this calibration method the machine must
    be using a Z MAX endstop.

    This procedure is usually more reliable than mechanical adjustments of a Z MIN
    endstop.'
  :accepts:
  - :Z
  :supported: true
- :code: M208
  :name: set axis max travel
  :example: M208 X250 Y210 Z180
  :method_name: set_axis_max_travel
  :description: ! '

    The values specified set the software limits for axis travel in the positive direction.

    With Marlin firmware, this value can be saved to EEPROM using the M500 command.'
  :accepts:
  - :X
  - :Y
  - :Z
  :supported: true
- :code: M209
  :name: enable automatic retract
  :example: M209 S1
  :method_name: enable_automatic_retract
  :description: ! '

    This boolean value S 1=true or 0=false enables automatic retract detect if the
    slicer did not support G10/11: every normal extrude-only move will be classified
    as retract depending on the direction.'
  :accepts:
  - :S
  :supported: true
- :code: M220
  :name: set speed factor override percentage
  :example: M220 S80
  :method_name: set_speed_factor_override_percentage
  :description: ! '

    S<factor in percent>- set speed factor override percentage'
  :accepts:
  - :S
  :supported: true
- :code: M221
  :name: set extrude factor override percentage
  :example: M221 S70
  :method_name: set_extrude_factor_override_percentage
  :description: ! '

    S<factor in percent>- set extrude factor override percentage'
  :accepts:
  - :S
  :supported: true
- :code: M226
  :name: Gcode Initiated Pause
  :example: M226
  :method_name: gcode_initiated_pause
  :description: ! '

    Initiates a pause in the same way as if the pause button is pressed. That is,
    program execution is stopped and the printer waits for user interaction. This
    matches the behaviour of M1 in the [http://www.nist.gov/manuscript-publication-search.cfm?pub_id=823374
    NIST RS274NGC G-code standard] and M0 in Marlin firmware.'
  :accepts: []
  :supported: true
- :code: M227
  :name: Enable Automatic Reverse and Prime
  :example: M227 P1600 S1600
  :method_name: enable_automatic_reverse_and_prime
  :description: ! '

    P and S are steps.

    "Reverse and Prime" means, the extruder filament is retracted some distance when
    not in use and pushed forward the same amount before going into use again. This
    shall help to prevent drooling of the extruder nozzle. Teacup firmware implements
    this with M101/M103.'
  :accepts:
  - :P
  - :S
  :supported: true
- :code: M228
  :name: Disable Automatic Reverse and Prime
  :example: M228
  :method_name: disable_automatic_reverse_and_prime
  :description: ! '

    See also M227.'
  :accepts: []
  :supported: true
- :code: M229
  :name: Enable Automatic Reverse and Prime
  :example: M229 P1.0 S1.0
  :method_name: enable_automatic_reverse_and_prime
  :description: ! '

    P and S are extruder screw rotations. See also M227.'
  :accepts:
  - :P
  - :S
  :supported: true
- :code: M230
  :name: Disable / Enable Wait for Temperature Change
  :example: M230 S1
  :method_name: disable_enable_wait_for_temperature_change
  :description: ! '

    S1 Disable wait for temperature change

    S0 Enable wait for temperature change'
  :accepts:
  - :S
  :supported: true
- :code: M240
  :name: Start conveyor belt motor / Echo off
  :example: M240
  :method_name: start_conveyor_belt_motor_echo_off
  :description: ! "\nThe conveyor belt allows to start mass production of a part with
    a reprap.  \nEchoing may be controlled in some firmwares with M111\n<br style=\"clear:
    both\" />"
  :accepts: []
  :supported: true
- :code: M241
  :name: Stop conveyor belt motor / echo on
  :example: M241
  :method_name: stop_conveyor_belt_motor_echo_on
  :description: ! '

    Echoing may be controlled in some firmwares with M111

    <br style="clear: both" />'
  :accepts: []
  :supported: true
- :code: M245
  :name: Start cooler
  :example: M245
  :method_name: start_cooler
  :description: ! '

    used to cool parts/heated-bed down after printing for easy remove of the parts
    after print'
  :accepts: []
  :supported: true
- :code: M246
  :name: Stop cooler
  :example: M246
  :method_name: stop_cooler
  :description: ''
  :accepts: []
  :supported: true
- :code: M300
  :name: Play beep sound
  :example: M300 S300 P1000
  :method_name: play_beep_sound
  :description: ! 'Usage: M300 S<frequency Hz> P<duration ms>


    Play beep sound, use to notify important events like the end of printing. [http://www.3dprinting-r2c2.com/?q=content/seasons-greetings
    See working example on] [[R2C2_RepRap_Electronics|R2C2 electronics]].'
  :accepts:
  - :P
  - :S
  :supported: true
- :code: M301
  :name: Set PID parameters - Hot End
  :example: M301 P1 I2 D3 C5
  :method_name: set_pid_parameters_hot_end
  :description: ! '

    Sets Proportional, Integral and Derivative values for hot end, the value C refers
    to an extrusion rate.

    Alternate implementation

    Example: M301 W125'
  :accepts:
  - :P
  :supported: true
- :code: M304
  :name: Set PID parameters - Bed
  :example: M304 P1 I2 D3
  :method_name: set_pid_parameters_bed
  :description: ! '

    Sets Proportional, Integral and Derivative values for bed'
  :accepts:
  - :P
  :supported: true
- :code: M420
  :name: Set RGB Colors as PWM
  :example: M420 R255 E255 B255
  :method_name: set_rgb_colors_as_pwm
  :description: ! 'Usage: M420 R<Red PWM (0-255)> E<Green PWM (0-255)> B<Blue PWM
    (0-255)>


    Set the color of your RGB LEDs that are connected to PWM-enabled pins.  Note,
    the Green color is controlled by the E value instead of the G value due to the
    G code being a primary code that cannot be overridden.'
  :accepts:
  - :E
  - :R
  :supported: true
- :code: T
  :name: Select Tool
  :example: T1
  :method_name: select_tool
  :description: ! "\nSelect extruder number 1 to build with.  \nThe sequence followed
    is:\n# Set the current extruder to its standby temperature specified by G10 (see
    above),\n# Set the new extruder to its operating temperature specified by G10
    and wait for '''all''' temperatures to stabilise,\n# Apply any X, Y, Z offset
    for the new extruder specified by G10,\n# Use the new extruder.\nSelecting a non-existent
    tool (100, say) just does Step 1. above.  That is to say it leaves all tools in
    their standby state.  You can, of course, use the G10 command beforehand to set
    that standby temperature to anything you like.\nNote that you may wish to move
    to a parking position ''before'' executing a T command  in order to allow the
    new extruder to reach temperature while not in contact with the print.  It is
    acceptable for the firmware to apply a small offset (by convention -1mm in Y)
    to the current position when the above sequence is entered to allow temperature
    changes to take effect just away from the parking position.  Any such offset must,
    of course, be undone when the procedure finishes.\nIf the Z value changes in the
    offsets and the head moves up, then the Z move is made before the X and Y moves.
    \ If Z moves down, X and Y are done first.\nAfter a reset extruders will not start
    heating until they are selected.  You can either put them all at their standby
    temperature by selecting them in turn, or leave them off so they only come on
    if/when you first use them.  The M0, M1 and M112 commands turn them all off.  You
    can, of course, turn them all off with the M1 command, then turn some back on
    again.  Don't forget also to turn on the heated bed (if any) if you use that trick.\nExtruder
    numbering starts at 0."
  :accepts:
  - :X
  - :Y
  - :Z
  :supported: true
