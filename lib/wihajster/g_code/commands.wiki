==== G0: Rapid move ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                          ???          || yes          || yes          || yes          || yes
|}

Example: G0 X12

In this case move rapidly to X = 12 mm.  In fact, the RepRap firmware uses exactly the same code for rapid as it uses for controlled moves (see G1 below), as - for the RepRap machine - this is just as efficient as not doing so.  (The distinction comes from some old machine tools that used to move faster if the axes were not driven in a straight line.  For them G0 allowed any movement in space to get to the destination as fast as possible.)

==== G1: Controlled move ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                          yes          || yes          || yes          || yes          || yes
|}

Example: G1 X90.6 Y13.8 E22.4

Go in a straight line from the current (X, Y) point to the point (90.6, 13.8), extruding material as the move happens from the current extruded length to a length of 22.4 mm.

RepRap does subtle things with feedrates.  Thus:

<pre>
G1 F1500
G1 X90.6 Y13.8 E22.4
</pre>  

Will set a feedrate of 1500 mm/minute, then do the move described above at that feedrate.  But

<pre>
G1 F1500
G1 X90.6 Y13.8 E22.4 F3000
</pre>

Will set a feedrate of 1500 mm/minute, then do the move described above accelerating to a feedrate of 3000 mm/minute as it does so.  The extrusion will accelerate along with the X, Y movement so everything stays synchronized.

RepRap thus treats feedrate as simply another variable (like X, Y, Z, and E) to be linearly interpolated. This gives complete control over accelerations and decelerations in a way that ensures that everything moves together and the right volume of material is extruded at all points.

''Note: not every firmware implements this, e.g. the current [[Marlin]] will use the new feedrate from the beginning of the move and not change it.''

The first example shows how to get a constant-speed movement.  The second how to accelerate or decelerate.  Thus

<pre>
G1 F1500
G1 X90.6 Y13.8 E22.4 F3000
G1 X80 Y20 E36 F1500
</pre>
    
Will do the first movement accelerating as before, and the second decelerating from 3000 mm/minute back to 1500 mm/minute.

To reverse the extruder by a given amount (for example to reduce its internal pressure while it does an in-air movement so that it doesn't dribble) simply use G1 to send an E value that is less than the currently extruded length.

==== G28: Move to Origin ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                          yes          || yes          || yes          || yes          || yes
|}

Example: G28

This causes the RepRap machine to move back to its X, Y and Z zero endstops, a process known as "homing".  It does so accelerating, so as to get there fast.  But when it arrives it backs off by 1 mm in each direction slowly, then moves back slowly to the stop.  This ensures more accurate positioning.  

If you add coordinates, then just the axes with coordinates specified will be zeroed.  Thus 

 G28 X0 Y72.3

will zero the X and Y axes, but not Z.  The actual coordinate values are ignored.

==== G29: Detailed Z-Probe ====

probes the bed at 3 points.

==== G30: Single Z Probe ====

probes bed at current XY location.

==== G31: Report Current Probe status ====

reports whether Z probe is triggered.

==== G32: Probe Z and calibrate with FPU ====

probes the bed at 3 points and updates transformation matrix for bed leveling compensation.

==== G4: Dwell ====

Example: G4 P200

In this case sit still doing nothing for 200 milliseconds.  During delays the state of the machine (for example the temperatures of its extruders) will still be preserved and controlled.

==== G10: Head Offset ====

Example: G10 P3 X17.8 Y-19.3 Z0.0 R140 S205

This sets the offset for extrude head 3 (from the P3) to the X and Y values specified.  You can put a non-zero Z value in as well, but this is usually a bad idea unless the heads are loaded and unloaded by some sort of head changer.  When all the heads are in the machine at once they should all be set to the same Z height.

Remember that any parameter that you don't specify will automatically be set to the last value for that parameter.  That usually means that you want explicitly to set Z0.0.  

The R value is the standby temperature in <sup>o</sup>C that will be used for the tool, and the S value is its operating temperature.  If you don't want the head to be at a different temperature when not in use, set both values the same.  See the T code (select tool) below.

The [http://www.nist.gov/customcf/get_pdf.cfm?pub_id=823374 NIST G-code standard] mentions an additional L parameter, which is ignored.

This command is [[Talk:G-code#M104 .26 M109 Deprecation, G10 Introduction | subject to discussion]].

==== G20: Set Units to Inches ====

Example: G20

Units from now on are in inches.

==== G21: Set Units to Millimeters ====

Example: G21

Units from now on are in millimeters.  (This is the RepRap default.)

==== G90: Set to Absolute Positioning ====

Example: G90

All coordinates from now on are absolute relative to the origin of the machine.  (This is the RepRap default.)

==== G91: Set to Relative Positioning ====

Example: G91

All coordinates from now on are relative to the last position.

==== G92: Set Position ====

Example: G92 X10 E90

Allows programming of absolute zero point, by reseting the current position to the values specified.  This would set the machine's X coordinate to 10, and the extrude coordinate to 90. No physical motion will occur.

A G92 without coordinates will reset all axes to zero.

=== Unbuffered M and T commands ===

==== M0: Stop ====

Example: M0

The RepRap machine finishes any moves left in its buffer, then shuts down.  All motors and heaters are turned off.  It can be started again by pressing the reset button on the master microcontroller.  See also M1, M112.

==== M1: Sleep ====

Example: M1

The RepRap machine finishes any moves left in its buffer, then shuts down.  All motors and heaters are turned off.  It can still be sent G and M codes, the first of which will wake it up again.  See also M0, M112.

==== M3: Spindle On, Clockwise  (CNC specific)====

Example: M3 S4000

The spindle is turned on with a speed of 4000 RPM.

==== M4: Spindle On, Counter-Clockwise (CNC specific) ====

Example: M4 S4000

The spindle is turned on with a speed of 4000 RPM.

==== M5: Spindle Off (CNC specific) ====

Example: M5

The spindle is turned off.

==== M7: Mist Coolant On (CNC specific) ====

Example: M7

Mist coolant is turned on (if available)

==== M8: Flood Coolant On (CNC specific) ====

Example: M8

Flood coolant is turned on (if available)

==== M9: Coolant Off (CNC specific) ====

Example: M9

All coolant systems are turned off.

==== M10: Vacuum On (CNC specific) ====

Example: M10

Dust collection vacuum system turned on.

==== M11: Vacuum Off (CNC specific) ====

Example: M11

Dust collection vacuum system turned off.

==== M17: Enable/Power all stepper motors====

Example: M17

==== M18: Disable all stepper motors====

Example: M18

Disables stepper motors and allows axis to move 'freely.'

- Is this not the same as [[#M84:_Stop_idle_hold|M84]]? --  [[User:MrAlvin|MrAlvin]] 05:53, 20 September 2012 (UTC)

==== M20: List SD card ====

Example: M20

All files in the root folder of the SD card are listed to the serial port.  This results in a line like:

ok Files: {SQUARE.G,SQCOM.G,}

The trailing comma is optional.  Note that file names are returned in upper case, but - when sent to the M23 command (below) they must be in lower case.  This seems to be a function of the SD software.  Go figure...

==== M21: Initialize SD card ====

Example: M21

The SD card is initialized. If an SD card is loaded when the machine is switched on, this will happen by default. SD card must be initialized for the other SD functions to work.

==== M22: Release SD card ====

Example: M22

SD card is released and can be physically removed.

==== M23: Select SD file ====

Example: M23 filename.gco

The file specified as filename.gco (8.3 naming convention is supported) is selected ready for printing.

==== M24: Start/resume SD print ====

Example: M24

The machine prints from the file selected with the M23 command.

==== M25: Pause SD print ====

Example: M25

The machine pause printing at the current position within the file selected with the M23 command.

==== M26: Set SD position ====

Example: M26

Set SD position in bytes (M26 S12345).

==== M27: Report SD print status ====

Example: M27

Report SD print status.

==== M28: Begin write to SD card ====

Example: M28 filename.gco

File specified by filename.gco is created (or overwritten if it exists) on the SD card and all subsequent commands sent to the machine are written to that file.

==== M29: Stop writing to SD card ====

Example: M29 filename.gco

File opened by M28 command is closed, and all subsequent commands sent to the machine are executed as normal.

==== M40: Eject ====

If your RepRap machine can eject the parts it has built off the bed, this command executes the eject cycle.  This usually involves cooling the bed and then performing a sequence of movements that remove the printed parts from it.  The X, Y and Z position of the machine at the end of this cycle are undefined (though they can be found out using the M114 command, q.v.).

See also M240 and M241 below.

==== M41: Loop ====

Example: M41

If the RepRap machine was building a file from its own memory such as a local SD card (as opposed to a file being transmitted to it from a host computer) this goes back to the beginning of the file and runs it again.  So, for example, if your RepRap is capable of ejecting parts from its build bed then you can set it printing in a loop and it will run and run.  Use with caution - the only things that will stop it are:

# When you press the reset button,
# When the build material runs out (if your RepRap is set up to detect this), and
# When there's an error (such as a heater failure).

==== M42: Stop on material exhausted / Switch I/O pin ====

===== M42 in ??? =====

Example: M42

If your RepRap can detect when its material runs out, this decides the behaviour when that happens.  The X and Y axes are zeroed (but not Z), and then the machine shuts all motors and heaters off.  You have to press reset to reactivate the machine.  In other words, it parks itself and then executes an M0 command (q.v.).

===== M42 in Marlin/Sprinter =====

Example: M42 P7 S255

M42 switches a general purpose I/O pin.

===== M42 in Teacup =====

Not needed. General purpose devices are handled like a heater, see [[#M104: Set Extruder Temperature | M104]].

==== M43: Stand by on material exhausted ====

Example: M43

If your RepRap can detect when its material runs out, this decides the behaviour when that happens.  The X and Y axes are zeroed (but not Z), and then the machine shuts all motors and heaters off except the heated bed, the temperature of which is maintained.  The machine will still respond to G and M code commands in this state.

==== M80: ATX Power On ====

Example: M80

Turns on the ATX power supply from standby mode to fully operational mode. No-op on electronics without standby mode.

'''Note''': some firmwares, like [[Teacup Firmware | Teacup]], handle power on/off automatically, so this is redundant there.

==== M81: ATX Power Off ====

Example: M81

Turns off the ATX power supply. Counterpart to M80.

==== M82: set extruder to absolute mode ====

Example: M82

makes the extruder interpret extrusion as absolute positions.

This is the default in repetier.

==== M83: set extruder to relative mode ====

Example: M83

makes the extruder interpret extrusion values as relative positions.

==== M84: Stop idle hold ====

Example: M84

Stop the idle hold on all axis and extruder. In some cases the idle hold causes annoying noises, which can be stopped by disabling the hold. Be aware that by disabling idle hold during printing, you will get quality issues. This is recommended only in between or after printjobs.

==== M92: Set axis_steps_per_unit ====

Example: M92 X<newsteps>   Sprinter and Marlin

Allows programming of steps per unit of axis till the electronics are reset for the specified axis. Very useful for calibration.

==== M98: Get axis_hysteresis_mm ====

Example: M98                       

Report the current hysteresis values in mm for all of the axis.

Proposed for Marlin

==== M99: Set axis_hysteresis_mm ====

Example: M99 X<mm> Y<mm> Z<mm> E<mm>   

Allows programming of axis hysteresis. Mechanical pulleys, gears and threads can have hysteresis when they change direction. That is, a certain number of steps occur before movement occurs. You can measure how many mm are lost to hysteresis and set their values with this command. Every time an axis changes direction, these extra mm will be added to compensate for the hysteresis.

Proposed for Marlin

==== M101 Turn extruder  1 on Forward / Undo Extruder Retraction ====

===== M101 in Teacup firmware =====

If a DC extruder is present, turn that on. Else, undo filament retraction, which means, make the extruder ready for extrusion. Complement to M103.

===== M101 in other firmwares =====

Deprecated. Regarding filament retraction, see M227, M228, M229.

==== M102 Turn extruder 1 on Reverse ====

Deprecated.

==== M103 Turn all extruders off / Extruder Retraction ====

===== M103 in Teacup firmware =====

If a DC extruder is present, turn that off. Else, retract the filament in the hope to prevent nozzle drooling. Complement to M101.

===== M103 in other firmwares =====

Deprecated. Regarding extruder retraction, see M227, M228, M229.

==== M104: Set Extruder Temperature ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                          yes          || yes          || yes          || yes          || yes
|}

Example: M104 S190

Set the temperature of the current extruder to 190<sup>o</sup>C and return control to the host immediately (''i.e.'' before that temperature has been reached by the extruder). See also M109.

This is deprecated because temperatures should be set using the G10 and T commands (q.v.).

Deprecation is [[Talk:G-code#M104 .26 M109 Deprecation, G10 Introduction | subject to discussion]]. --[[User:Traumflug|Traumflug]] 11:33, 19 July 2012 (UTC)

===== M104 in Teacup Firmware =====

In Teacup Firmware, M104 can be additionally used to handle all devices using a temperature sensor. It supports the additional P parameter, which is a zero-based index into the list of sensors in config.h. For devices without a temp sensor, see [[#M106: Fan On | M106]].

Example: M104 P1 S100

Set the temperature of the device attached to the second temperature sensor to 100&nbsp;°C.

==== M105: Get Extruder Temperature ====

Example: M105

Request the temperature of the current extruder and the build base in degrees Celsius.  The temperatures are returned to the host computer.  For example, the line sent to the host in response to this command looks like

<tt>ok T:201 B:117</tt>

==== M106: Fan On ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                                       || yes          || yes          || yes          ||
|}

Example: M106 S127

Turn on the cooling fan at half speed.

Mandatory parameter 'S' declares the PWM value (0-255). M106 S0 turns the fan off.

===== M106 in Teacup Firmware =====

Additionally to the above, Teacup Firmware uses M106 to control general devices. It supports the additional P parameter, which is an zero-based index into the list of heaters/devices in config.h.

Example: M106 P2 S255

Turn on device #3 at full speed/wattage.

'''Note''': When turning on a temperature sensor equipped heater with M106 and M104 at the same time, temperature control will override the value given in M106 quickly.

==== M107: Fan Off ====

Deprecated. Use M106 S0 instead.

==== M108: Set Extruder Speed ====

Sets speed of extruder motor.
(Deprecated in current firmware, see M113)

==== M109: Set Extruder Temperature and Wait ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                          ???          || not needed   || see text     || yes          || ???
|}

===== M109 in Teacup =====

Not needed. To mimic Marlin behaviour, use [[#M104: Set Extruder Temperature | M104]] followed by [[#M116: Wait | M116]].

===== M109 in Marlin, Sprinter (ATmega port) =====

Set extruder heater temperature in degrees celsius and wait for this temperature to be achieved.

Example: M109 S185

===== M109 in Sprinter (4pi port) =====

Parameters:  '''S''' (optional), set target temperature value. If not specified, waits for the temperature set by [[#M104: Set Extruder Temperature | M104]]. '''R''' (optional), sets target temperature range maximum value.

Example: M109 S185 R240  //sets extruder temperature to 185 and waits for the temperature to be between 185 - 240.

If you have multiple extruders, use '''T''' or '''P''' parameter to specify which extruder you want to set/wait.

Another way to do this is to use [[#G10: Head Offset | G10]].

==== M110: Set Current Line Number ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                          ???          || not needed   || ???          || ???          || ???
|}

Example: M110 N123

Set the current line number to 123.  Thus the expected next line after this command will be 124.
<br style="clear: both" />

==== M111: Set Debug Level ====

Example: M111 S6

Set the level of debugging information transmitted back to the host to level 6.  The level is the OR of three bits:

<Pre>
#define DEBUG_ECHO (1<<0)
#define DEBUG_INFO (1<<1)
#define DEBUG_ERRORS (1<<2)
</pre>

Thus 6 means send information and errors, but don't echo commands.  (This is the RepRap default.)


Example: M253 

{| class="wikitable"
! rowspan="2" | Support || FiveD        || Teacup        || Sprinter     || Marlin       || Repetier
|-
|                                       || Debug         ||              ||              || 
|}


==== M112: Emergency Stop ====

Example: M112

Any moves in progress are immediately terminated, then RepRap shuts down.  All motors and heaters are turned off.  It can be started again by pressing the reset button on the master microcontroller.  See also M0 and M1.

==== M113: Set Extruder PWM ====

Example: M113

Set the PWM for the currently-selected extruder.  On its own this command 
sets RepRap to use the on-board potentiometer on the extruder controller board to set the PWM for the currently-selected extruder's stepper power.  With an S field:

M113 S0.7

it causes the PWM to be set to the S value (70% in this instance).  M113 S0 turns the extruder off, until an M113 command other than M113 S0 is sent.

==== M114: Get Current Position ====

Example: M114

This causes the RepRap machine to report its current X, Y, Z and E coordinates to the host.

For example, the machine returns a string such as:

<tt>ok C: X:0.00 Y:0.00 Z:0.00 E:0.00</tt>

==== M115: Get Firmware Version and Capabilities ====

Example: M115

Request the Firmware Version and Capabilities of the current microcontroller 
The details are returned to the host computer as key:value pairs separated by spaces and terminated with a linefeed.

sample data from firmware:
 ok PROTOCOL_VERSION:0.1 FIRMWARE_NAME:FiveD FIRMWARE_URL:http%3A//reprap.org MACHINE_TYPE:Mendel EXTRUDER_COUNT:1

This M115 code is inconsistently implemented, and should not be relied upon to exist, or output correctly in all cases. An initial implementation was committed to svn for the FiveD Reprap firmware on 11 Oct 2010.  Work to more formally define protocol versions is currently (October 2010) being discussed.  See [[M115_Keywords]] for one draft set of keywords and their meanings.

==== M116: Wait ====

Example: M116

Wait for ''all'' temperatures and other slowly-changing variables to arrive at their set values.  See also M109.

==== M117: Get Zero Position ====

Example: M117

This causes the RepRap machine to report the X, Y, Z and E coordinates ''in steps not mm'' to the host that it found when it last hit the zero stops for those axes.  That is to say, when you zero X, the <i>x</i> coordinate of the machine when it hits the X endstop is recorded.  This value should be 0, of course.  But if the machine has drifted (for example by dropping steps) then it won't be.  This command allows you to measure and to diagnose such problems.  (E is included for completeness.  It doesn't normally have an endstop.)

==== M118: Negotiate Features ====

Example: M118 P42

This M-code is for future proofing. NO firmware or hostware supports this at the moment. It is used in conjunction with M115's FEATURES keyword.

See [[Protocol_Feature_Negotiation]] for more info.

==== M119: Get Endstop Status ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                                       || M200 instead ||              || yes          || 
|}


Example: M119

Returns the current state of the configured X,Y,Z endstops. Should take into account any 'inverted endstop' settings, so one can confirm that the machine is interpreting the endstops correctly.

==== M126: Open Valve ====

Example: M126 P500

Open the extruder's valve (if it has one) and wait 500 milliseconds for it to do so.

==== M127: Close Valve ====

Example: M127 P400

Close the extruder's valve (if it has one) and wait 400 milliseconds for it to do so.

==== M128: Extruder Pressure PWM ====

Example: M128 S255

PWM value to control internal extruder pressure. S255 is full pressure.

==== M129: Extruder pressure off ====

Example: M129 P100

In addition to setting Extruder pressure to 0, you can turn the pressure off entirely. P400 will wait 100ms to do so.

==== M130: Set PID P value ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                                       || yes          ||              ||              || 
|}

Example: M130 P 0 S 8.0  #  Sets heater 0 P factor to 8.0
<br style="clear: both" />

==== M131: Set PID I value ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                                       || yes          ||              ||              || 
|}

Example: M130 P 1 S 0.5  #  Sets heater 1 I factor to 0.5
<br style="clear: both" />

==== M132: Set PID D value ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                                       || yes          ||              ||              || 
|}

Example: M130 P 0 S 24  #  Sets heater 0 D factor to 24.0

<br style="clear: both" />

==== M133: Set PID I limit value ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                                       || yes          ||              ||              || 
|}

Example: M130 P 1 S 264  #  Sets heater 0 I limit value to 264

<br style="clear: both" />

==== M134: Write PID values to EEPROM ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                                       || yes          ||              ||              || 
|}

Example: M134 
<br style="clear: both" />

==== M136: Print PID settings to host ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                                       || Debug        ||              ||              || 
|}

Example: M136 P1  # print heater 0 PID parameters to host
<br style="clear: both" />

==== M140: Bed Temperature (Fast) ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                                       || yes          || yes          || yes          || yes
|}

Example: M140 S55

Set the temperature of the build bed to 55<sup>o</sup>C and return control to the host immediately (''i.e.'' before that temperature has been reached by the bed).

==== M141: Chamber Temperature (Fast) ====

Example: M141 S30

Set the temperature of the chamber to 30<sup>o</sup>C and return control to the host immediately (''i.e.'' before that temperature has been reached by the chamber).

==== M142: Holding Pressure ====

Example: M142 S1

Set the holding pressure of the bed to 1 bar.

The holding pressure is in bar.  For hardware which only has on/off holding, when the holding pressure is zero, turn off holding, when the holding pressure is greater than zero, turn on holding.

====  M143: Maximum hot-end temperature ====

Example: M143 S275

Set the maximum temperature of the hot-end to 275C

When temperature of the hot-end exceeds this value, take countermeasures, for instance an emergency stop. This is to prevent hot-end damage.

====  M160: Number of mixed materials ====

Example: M160 S4

Set the number of materials, N, that the current extruder can handle to the number specified.  The default is 1.

When N >= 2, then the E field that controls extrusion requires N+1 values separated by spaces after it like this: 

<pre>
M160 S4
G1 X90.6 Y13.8 E22.4 0.1 0.1 0.1 0.7
G1 X70.6 E42.4 0.0 0.0 0.0 1.0
G1 E42.4 1.0 0.0 0.0 0.0
</pre>

The second line moves straight to the point (90.6, 13.8) extruding 22.4mm of filament.  The mix ratio at the '''end''' of the move is 0.1:0.1:0.1:0.7.

The third line moves back 20mm in X extruding 20mm of filament.  The mix varies linearly from 0.1:0.1:0.1:0.7 to 0:0:0:1 as the move is made.

The fourth line has no physical effect, but sets the mix proportions for the start of the next move to 1:0:0:0.

==== M190: Wait for bed temperature to reach target temp ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                                       || obsolete, see M116 || yes          || yes          || 
|}

Example: M190 S60

This will wait until the bed temperature reaches 60 degrees, printing out the temperature of the hot end and the bed every second.
<br style="clear: both" />

==== M200 - Set filament diameter / Get Endstop Status ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup       || Sprinter     || Marlin       || Repetier
|-
|                                       || endstop status||             || dia          || 
|}

M200 reports the endstop status on Teacup firmware.

M200 sets the filament diameter on other firmware.

Question: what does a firmware do with filament diameter? Has this an effect on how much an E command moves the extruder motor? --[[User:Traumflug|Traumflug]] 11:34, 14 October 2012 (UTC)

==== M201 - Set max printing acceleration ====

in units/s^2 for print moves (M201 X1000 Y1000)

==== M202 - Set max travel acceleration ====

in units/s^2 for travel moves (M202 X1000 Y1000) Unused in Marlin!!

==== M203 - Set maximum feedrate ====

that your machine can sustain (M203 X200 Y200 Z300 E10000) in mm/sec

Note: this should be in units/minute, just like the F code.

==== M204 - Set default acceleration ====

S normal moves T filament only moves (M204 S3000 T7000) im mm/sec^2  also sets minimum segment time in ms (B20000) to prevent buffer underruns and M20 minimum feedrate

==== M205 -  advanced settings ====

minimum travel speed S=while printing T=travel only,  B=minimum segment time X= maximum xy jerk, Z=maximum Z jerk, E=maximum E jerk

==== M206: set home offset ====

Example: M206 X10.0 Y10.0 Z-0.4

The values specified are added to the endstop position when the axes are referenced. The same can be achieved with a G92 right after homing (G28, G161).

With Marlin firmware, this value can be saved to EEPROM using the M500 command.

A similar command is G10, aligning these two is [[Talk:G-code#M104 .26 M109 Deprecation, G10 Introduction | subject to discussion]].

==== M207: calibrate z axis by detecting z max length ====

Example: M207

After placing the tip of the nozzle in the position you expect to be considered Z=0, issue this command to calibrate the Z axis. It will perform a z axis homing routine and calculate the distance traveled in this process. The result is stored in EEPROM as z_max_length. For using this calibration method the machine must be using a Z MAX endstop.

This procedure is usually more reliable than mechanical adjustments of a Z MIN endstop.

==== M208: set axis max travel ====

Example: M208 X250 Y210 Z180

The values specified set the software limits for axis travel in the positive direction.

With Marlin firmware, this value can be saved to EEPROM using the M500 command.


==== M209: enable automatic retract ====

Example: M209 S1
 
This boolean value S 1=true or 0=false enables automatic retract detect if the slicer did not support G10/11: every normal extrude-only move will be classified as retract depending on the direction.

==== M220:set speed factor override percentage ====
 
Example: M220 S80

S<factor in percent>- set speed factor override percentage

==== M221: set extrude factor override percentage ====

Example: M221 S70

 S<factor in percent>- set extrude factor override percentage

==== M226: Gcode Initiated Pause ====

Example: M226

Initiates a pause in the same way as if the pause button is pressed. That is, program execution is stopped and the printer waits for user interaction. This matches the behaviour of M1 in the [http://www.nist.gov/manuscript-publication-search.cfm?pub_id=823374 NIST RS274NGC G-code standard] and M0 in Marlin firmware.

==== M227: Enable Automatic Reverse and Prime ====

Example: M227 P1600 S1600

P and S are steps.

"Reverse and Prime" means, the extruder filament is retracted some distance when not in use and pushed forward the same amount before going into use again. This shall help to prevent drooling of the extruder nozzle. Teacup firmware implements this with M101/M103.

==== M228: Disable Automatic Reverse and Prime ====

Example: M228

See also M227.

==== M229: Enable Automatic Reverse and Prime ====

Example: M229 P1.0 S1.0

P and S are extruder screw rotations. See also M227.

==== M230: Disable / Enable Wait for Temperature Change ====

Example: M230 S1

S1 Disable wait for temperature change
S0 Enable wait for temperature change


==== M240: Start conveyor belt motor / Echo off ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup        || Sprinter     || Marlin       || Repetier
|-
|                                       || Debug: Echo off||              ||              || 
|}

Example: M240

The conveyor belt allows to start mass production of a part with a reprap.  

Echoing may be controlled in some firmwares with M111
<br style="clear: both" />

==== M241: Stop conveyor belt motor / echo on ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup        || Sprinter     || Marlin       || Repetier
|-
|                                       || Debug: Echo on||              ||              || 
|}

Example: M241

Echoing may be controlled in some firmwares with M111
<br style="clear: both" />

==== M245: Start cooler ====

Example: M245

used to cool parts/heated-bed down after printing for easy remove of the parts after print

==== M246: Stop cooler ====

Example: M246

==== M300: Play beep sound ====

Usage: M300 S<frequency Hz> P<duration ms>

Example: M300 S300 P1000

Play beep sound, use to notify important events like the end of printing. [http://www.3dprinting-r2c2.com/?q=content/seasons-greetings See working example on] [[R2C2_RepRap_Electronics|R2C2 electronics]].

==== M301: Set PID parameters - Hot End ====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup        || Sprinter     || Marlin       || Repetier
|-
|                                       ||               ||              || PID          || 
|}
Example: M301 P1 I2 D3 C5

Sets Proportional, Integral and Derivative values for hot end, the value C refers to an extrusion rate.

Alternate implementation

Example: M301 W125

==== M304: Set PID parameters - Bed====
{| class="wikitable" align="right"
! rowspan="2" | Support || FiveD        || Teacup        || Sprinter     || Marlin       || Repetier
|-
|                                       ||               ||              || PID          || 
|}
Example: M304 P1 I2 D3

Sets Proportional, Integral and Derivative values for bed

==== M420: Set RGB Colors as PWM ====

Usage: M420 R<Red PWM (0-255)> E<Green PWM (0-255)> B<Blue PWM (0-255)>

Example: M420 R255 E255 B255

Set the color of your RGB LEDs that are connected to PWM-enabled pins.  Note, the Green color is controlled by the E value instead of the G value due to the G code being a primary code that cannot be overridden.

==== T: Select Tool ====

Example: T1

Select extruder number 1 to build with.  

The sequence followed is:

# Set the current extruder to its standby temperature specified by G10 (see above),
# Set the new extruder to its operating temperature specified by G10 and wait for '''all''' temperatures to stabilise,
# Apply any X, Y, Z offset for the new extruder specified by G10,
# Use the new extruder.

Selecting a non-existent tool (100, say) just does Step 1. above.  That is to say it leaves all tools in their standby state.  You can, of course, use the G10 command beforehand to set that standby temperature to anything you like.

Note that you may wish to move to a parking position ''before'' executing a T command  in order to allow the new extruder to reach temperature while not in contact with the print.  It is acceptable for the firmware to apply a small offset (by convention -1mm in Y) to the current position when the above sequence is entered to allow temperature changes to take effect just away from the parking position.  Any such offset must, of course, be undone when the procedure finishes.

If the Z value changes in the offsets and the head moves up, then the Z move is made before the X and Y moves.  If Z moves down, X and Y are done first.

After a reset extruders will not start heating until they are selected.  You can either put them all at their standby temperature by selecting them in turn, or leave them off so they only come on if/when you first use them.  The M0, M1 and M112 commands turn them all off.  You can, of course, turn them all off with the M1 command, then turn some back on again.  Don't forget also to turn on the heated bed (if any) if you use that trick.

Extruder numbering starts at 0.

=== M500: stores paramters in EEPROM ===

=== M501: reads parameters from EEPROM ===
If you need to reset them after you changed them temporarily

=== M502: reverts to the default "factory settings". ===

You still need to store them in EEPROM afterwards if you want to.

=== M503: Print settings ===

